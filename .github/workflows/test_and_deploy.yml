name: tests

on: push

jobs:
  ubuntu-latest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools tox tox-gh-actions
      - name: Test with tox
        run: tox
      - name: Coverage
        uses: codecov/codecov-action@v1

  # minimizing matrix by only testing 3.8 on  windows
  win:
    name: ${{ matrix.platform }} (3.8)
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools tox tox-gh-actions
      - name: Test with tox
        run: tox
        env:
          PLATFORM: ${{ matrix.platform }}

  deploy:
    needs: [ubuntu-latest, win]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - name: Build manylinux Python wheels
        uses: RalfG/python-wheels-manylinux-build@v0.3.2-manylinux2014_x86_64
        with:
          python-versions: 'cp37-cp37m cp38-cp38'
#           build-requirements: 'cython numpy'
      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: |
          twine upload dist/*-manylinux*.whl
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v1
#        with:
#          python-version: "3.x"
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -U setuptools setuptools_scm wheel twine
#      - name: Build and publish
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
#        run: |
#          git tag
#          python setup.py sdist bdist_wheel
#          twine upload dist/*


#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python
#      uses: actions/setup-python@v1
#      with:
#        python-version: 3.8
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install twine flake8
#    - name: Lint with flake8 for syntax errors
#      run: |
#        pip install flake8
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Build manylinux Python wheels
#      uses: RalfG/python-wheels-manylinux-build@v0.3.2-manylinux2014_x86_64
#      with:
#        python-versions: 'cp36-cp36m cp37-cp37m'
#        build-requirements: 'cython numpy'
#    - name: Publish wheels to PyPI
#      env:
#        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#      run: |
#        twine upload dist/*-manylinux*.whl